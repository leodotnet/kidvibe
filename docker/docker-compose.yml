version: '3.8'

services:
  # 后端服务
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/kidvibe
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-change-in-production
      - DEBUG=false
    depends_on:
      - db
      - redis
    volumes:
      - ../backend:/app
      - uploads:/app/uploads
    networks:
      - kidvibe-network

  # 前端服务
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ../frontend:/app
      - /app/node_modules
    networks:
      - kidvibe-network

  # PostgreSQL 数据库
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=kidvibe
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kidvibe-network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kidvibe-network

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - kidvibe-network

volumes:
  postgres_data:
  redis_data:
  uploads:

networks:
  kidvibe-network:
    driver: bridge 